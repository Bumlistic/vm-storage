name: "Terraform â€” RG & Storage Deploy (Self-Hosted Windows)"

on:
  push:
    branches: [ main ]

jobs:
  terraform:
    name: Terraform Plan & Apply
    runs-on: self-hosted
    environment: production

    env:
      ARM_SUBSCRIPTION_ID: ${{ secrets.TF_SUBSCRIPTION_ID }}
      ARM_CLIENT_ID:       ${{ secrets.TF_CLIENT_ID }}
      ARM_CLIENT_SECRET:   ${{ secrets.TF_CLIENT_SECRET }}
      ARM_TENANT_ID:       ${{ secrets.TF_TENANT_ID }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: '1.13.3'

      - name: Terraform Init (upgrade providers; fail fast if backend perms wrong)
        shell: powershell
        run: terraform init -input=false -upgrade

      - name: Terraform Validate
        shell: powershell
        run: terraform validate

      - name: Terraform Plan (with detailed exit code)
        id: plan
        shell: powershell
        run: |
          terraform plan -input=false -out=tfplan-rg-storage.bin -detailed-exitcode
          $exit = $LASTEXITCODE
          if ($exit -eq 2) {
            Write-Host "Plan has changes."
          } elseif ($exit -eq 0) {
            Write-Host "No changes in plan."
          } else {
            exit $exit
          }

      - name: Show Plan (human readable)
        if: always()
        shell: powershell
        run: terraform show -no-color tfplan-rg-storage.bin

      - name: Terraform Apply (only when plan has changes)
        if: steps.plan.outcome == 'success' && steps.plan.conclusion == 'success'
        shell: powershell
        run: terraform apply -input=false -auto-approve tfplan-rg-storage.bin

      - name: Terraform Outputs
        shell: powershell
        run: terraform output
