name: "Terraform — RG & Storage Deploy (Self-Hosted Windows)"

# Automatically run on push to main
on:
  push:
    branches: [ main ]

jobs:
  terraform:
    name: Terraform Plan & Apply
    runs-on: self-hosted
    environment: production

    env:
      # Azure authentication via secrets
      ARM_SUBSCRIPTION_ID: ${{ secrets.TF_SUBSCRIPTION_ID }}
      ARM_CLIENT_ID: ${{ secrets.TF_CLIENT_ID }}
      ARM_CLIENT_SECRET: ${{ secrets.TF_CLIENT_SECRET }}
      ARM_TENANT_ID: ${{ secrets.TF_TENANT_ID }}
      TF_WORKING_DIR: '.'
      TF_PLAN_FILE: 'tfplan-rg-storage.bin'

    steps:
      # 1️⃣ Checkout repository
      - name: Checkout repository
        uses: actions/checkout@v4

      # 2️⃣ Setup Terraform
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: '1.13.3'  # Match your Terraform version

      # 3️⃣ Initialize Terraform with backend
      - name: Terraform Init
        working-directory: ${{ env.TF_WORKING_DIR }}
        run: terraform init -input=false -reconfigure

      # 4️⃣ Validate Terraform configuration
      - name: Terraform Validate
        working-directory: ${{ env.TF_WORKING_DIR }}
        run: terraform validate

      # 5️⃣ Terraform Plan
      - name: Terraform Plan
        working-directory: ${{ env.TF_WORKING_DIR }}
        run: |
          terraform plan -out="${{ env.TF_PLAN_FILE }}" \
            -var="subscription_id=${{ secrets.TF_SUBSCRIPTION_ID }}" \
            -var="client_id=${{ secrets.TF_CLIENT_ID }}" \
            -var="client_secret=${{ secrets.TF_CLIENT_SECRET }}" \
            -var="tenant_id=${{ secrets.TF_TENANT_ID }}" \
            -var="resource_group_name=rg-demo" \
            -var="storage_account_name=stgaccdemo" \
            -var="location=Canada Central"

      # 6️⃣ Terraform Apply (auto-approve)
      - name: Terraform Apply
        working-directory: ${{ env.TF_WORKING_DIR }}
        run: terraform apply -auto-approve "${{ env.TF_PLAN_FILE }}"

      # 7️⃣ Show Terraform outputs
      - name: Terraform Output
        working-directory: ${{ env.TF_WORKING_DIR }}
        run: terraform output
